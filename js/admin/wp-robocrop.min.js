!function(t){var i;i=_.extend(window.robocrop,{cropFromFocusPoint:function(t,i){var e=(t.focuspoint.x+1)/2*t.width,h=(1-t.focuspoint.y)/2*t.height,a=Math.min(t.width/i.min_width,t.height/i.min_height),o=i.min_width*a,n=i.min_height*a,r=Math.min(Math.max(e-o/2,0),t.width-o),c=Math.min(Math.max(h-n/2,0),t.height-n);return{names:i.sizes,x:r/t.width,y:c/t.height,width:o/t.width,height:n/t.height}},relToAbsCoords:function(t,i){var e,h={};for(e in t)switch(e){case"x":case"x1":case"x2":case"width":h[e]=t[e]*i.width;break;case"y":case"y1":case"y2":case"height":h[e]=t[e]*i.height;break;default:h[e]=t[e]}return h},absToRelCoords:function(t,i){var e,h={};for(e in t)switch(e){case"x":case"x1":case"x2":case"width":h[e]=t[e]/i.width;break;case"y":case"y1":case"y2":case"height":h[e]=t[e]/i.height;break;default:h[e]=t[e]}return h},pointToRectCoords:function(t){return{x:t.x1,y:t.y1,width:t.x2-t.x1,height:t.y2-t.y1}},rectToPointCoords:function(t){return{x1:t.x,y1:t.y,x2:t.maxX?t.maxX:t.x+t.width,y2:t.maxY?t.maxY:t.y+t.height}},view:{},controller:{}}),t.media.robocrop=i}(wp);
!function(t,e){var i=t.media.robocrop,o=i.image_ratios,s=i.image_sizes,a=i.l10n;i.options;i.view.Img=t.media.View.extend({className:"attachment-image",tagName:"img",id:"robocrop-image",initialize:function(){var t=this;_.defaults(this.options,{src:""}),this.$el.on("load",function(){t.width=t.$el.get(0).naturalWidth,t.height=t.$el.get(0).naturalHeight,t.ratio=t.width/t.height,t.trigger("load",t)}),this.$el.attr("src",this.options.src)},getSrc:function(t){return this.$el.attr("src")},setSrc:function(t){return!!t&&this.$el.attr("src",t),this}}),i.view.RobocropRatioSelect=t.media.View.extend({className:"robocrop-select",template:t.template("robocrop-select"),events:{'click [name="robocrop-select-ratio"]':"selectRatio"},initialize:function(){t.Backbone.View.prototype.initialize.apply(this,arguments),_.defaults({ratios:{},tools:{}},this.options),this.options.l10n=a},render:function(){t.Backbone.View.prototype.render.apply(this,arguments);var o=this;_.each(this.options.tools,function(t,e){o.views.add(new i.view.RobocropRatioSelectItem({ratiokey:e,sizenames:!1,ratio:e,title:t.title,enabled:!0}))}),_.each(this.options.ratios,function(t,a){var n=[],r=_.template('<span class="sizename<%= cancrop ? "" : " disabled" %>"><%= name %> (<%= width %>Ã—<%= height %>)</span>');_.each(t.sizes,function(t,i){var a=e.extend(!0,{cancrop:o.model.get("width")>=s[t].width&&o.model.get("height")>=s[t].height},s[t]);a.crop&&n.push(r(a))}),o.views.add(new i.view.RobocropRatioSelectItem({ratiokey:a,sizenames:n.join(""),ratio:a,title:a+" : 1",enabled:o.model.get("width")>=t.min_width&&o.model.get("height")>=t.min_height}))})},setSelected:function(t){this.$el.find('[name="robocrop-select-ratio"][value="'+t+'"]').prop("checked",!0),this.selectRatio()},getSelected:function(){return this.$el.find('[name="robocrop-select-ratio"]:checked').val()},selectRatio:function(t){this.options.ratios[this.getSelected()]?this.trigger("select-ratio"):this.options.tools[this.getSelected()]&&this.trigger("select-tool"),this.trigger("select")}}),i.view.RobocropRatioSelectItem=t.media.View.extend({className:"robocrop-select-item",template:t.template("robocrop-select-item"),sizekey:"",sizenames:"",ratio:0,enabled:null,render:function(){t.Backbone.View.prototype.render.apply(this,arguments),this.$el.find('input[type="radio"]').prop("disabled",!this.options.enabled)}}),i.view.RobocropImage=t.media.View.extend({className:"image-robocrop",template:t.template("robocrop"),image_ratios:o,image_sizes:s,_croppers:null,events:{"click .robocrop-autocrop-current":"autocrop","click .robocrop-autocrop-all":"autocropAll"},initialize:function(e){this._croppers={},this.image=new i.view.Img({src:this.model.get("url")}),this.controller=e.controller,this.focuspointtool=new i.view.focuspoint.ImageFocusPointSelect({image:this.image,focuspoint:{x:0,y:0},src:this.model.get("url")}),this.listenTo(this.focuspointtool,"changed",this.updateFocusPoint),t.media.View.prototype.initialize.apply(this,arguments)},dismiss:function(){var t=this.$areaSelect();t&&t.remove(),this.$el.remove()},createSelect:function(){this.select=new i.view.RobocropRatioSelect({choices:choices})},hasChanged:function(){this.trigger("changed")},render:function(){var e=this;return t.media.View.prototype.render.apply(this,arguments),this.views.set(".robocrop-content",this.focuspointtool),this.focuspointtool.setFocuspoint(this.model.get("focuspoint")),this.image.$el.imgAreaSelect({parent:this.image.$el.closest(".robocrop-image-box"),instance:!0,handles:!0,keys:!0,persistent:!0,enabled:!0,movable:!0,resizable:!0,imageHeight:this.model.get("height"),imageWidth:this.model.get("width"),onSelectEnd:function(t,o){var s=i.pointToRectCoords(o);e._setCropSizes(s),e.hasChanged()}}),this.selectRatio=new i.view.RobocropRatioSelect({tools:{focuspoint:{title:a.SetFocusPoint,trigger:"focuspoint"}},ratios:this.image_ratios,model:this.model}),this.selectRatio.on("select-ratio",this.onselectratio,this).on("select-tool",this.onselecttool,this).on("select",this.updateButtons,this),this.views.set(".select-ratio",this.selectRatio),this.$autoButton=this.$el.find(".robocrop-autocrop-current"),this.$autoAllButton=this.$el.find(".robocrop-autocrop-all"),this},ready:function(){var e,i;return t.media.view.EditImage.prototype.ready.apply(this,arguments),_.isUndefined(this.options.sizeToSelect)||(i=_.find(this.image_ratios,function(t){return t.sizes.indexOf(this.options.sizeToSelect)>-1},this))&&(e=i.name),_.isUndefined(e)&&(e="focuspoint"),this.selectRatio.setSelected(e),this},save:function(){var t={attachments:{}},i=this.model.get("id"),o=this.$autoAllButton.add(this.$autoButton).prop("disabled",!0),s=this;return t.attachments[i]={sizes:this.model.get("sizes"),focuspoint:this.model.get("focuspoint")},this.model.saveCompat(t,{}).done(function(t){var i=new Date;_.each(s.model.attributes.sizes,function(t,o){var s='img[src^="'+t.url+'"]',a=function(){e(this).removeAttr("src").attr("src",t.url+"?"+i.getTime())};refresh_mce=function(){e(this).removeAttr("data-mce-src").attr("data-mce-src",t.url+"?"+i.getTime())},"full"!==o&&(e(document).add(e("iframe").contents()).find(s).each(a),e(".mce-edit-area iframe").each(function(){e(this).contents().find(s).each(a).each(refresh_mce)}))},s),o.prop("disabled",!1),s.trigger("saved")}),this},updateButtons:function(){var t=this.selectRatio.getSelected();this.$autoButton.toggleClass("hidden","focuspoint"===t),this.$autoAllButton.toggleClass("hidden","focuspoint"!==t)},onselecttool:function(){var t=this.selectRatio.getSelected();switch(this.$areaSelect().cancelSelection(),t){case"focuspoint":this.focuspointtool.setEnabled(!0)}},onselectratio:function(){this.focuspointtool.setEnabled(!1);var t,e,i,o=this.selectRatio.getSelected(),a=this.model.get("sizes"),n=this,r=this.model.get("width"),c=this.model.get("height");if(this.current_ratio=this.image_ratios[o],i={aspectRatio:this.current_ratio.ratio+":1",minWidth:this.current_ratio.min_width,minHeight:this.current_ratio.min_height},_.each(this.current_ratio.sizes,function(t){!e&&a[t]&&a[t].cropdata&&(e=a[t].cropdata),s[t].width<=r&&s[t].height<=c&&(i.minWidth=Math.max(i.minWidth,s[t].width),i.minHeight=Math.max(i.minHeight,s[t].height))}),e)t={},_.extend(t,e);else{var h=Math.min(this.model.get("width")/this.current_ratio.ratio,this.model.get("height"));t={x:0,y:0,width:h*this.current_ratio.ratio,height:h},t.x=(this.model.get("width")-t.width)/2,t.y=(this.model.get("height")-t.height)/2}return this.$areaSelect().setOptions(i),this.image.$el.get(0).complete?this.selectCrop(t):this.image.$el.on("load",function(){n.selectCrop(t)}),this},autocrop:function(t){var e,o={width:this.model.get("width"),height:this.model.get("height"),focuspoint:this.model.get("focuspoint")};return e=i.cropFromFocusPoint(o,this.current_ratio),e=i.relToAbsCoords(e,o),this._setCropSizes(e),this.selectCrop(e),this},autocropAll:function(t){var e=this,o={width:this.model.get("width"),height:this.model.get("height"),focuspoint:this.model.get("focuspoint")};return _.each(this.image_ratios,function(t){var s;s=i.cropFromFocusPoint(o,t),s=i.relToAbsCoords(s,o),e._setCropSizes(s,t)}),this},selectCrop:function(t){var e=(this._image_scale_factor(),i.rectToPointCoords(t)),o=this.$areaSelect();return o.setSelection(e.x1,e.y1,e.x2,e.y2,!1),o.setOptions({show:!0}),o.update(),this},$areaSelect:function(){return this.image.$el.data("imgAreaSelect")},_image_scale_factor:function(){var t=this.image.$el.closest(".robocrop-image-box"),e=Math.min(this.model.get("width"),t.width()),i=Math.min(this.model.get("height"),t.height());return Math.min(e/this.model.get("width"),i/this.model.get("height"))},updateFocusPoint:function(){this.model.set("focuspoint",this.focuspointtool.getFocuspoint())},_setCropSizes:function(t,e){var i=this.model.get("width"),o=this.model.get("height"),a=this.model.get("sizes"),e=e||this.current_ratio;_.each(e.sizes,function(e){i>=s[e].width&&o>=s[e].height&&s[e].crop?a[e].cropdata=t:void 0!==a[e]&&delete a[e]}),this.model.set("sizes",a)},_getRelativeCoords:function(t){var e=this.model.get("width"),i=this.model.get("height");for(var o in t)if("number"==typeof t[o])switch(o){case"x":case"x1":case"x2":case"width":case"minX":case"maxX":t[o]/=e;break;default:t[o]/=i}},_getAbsoluteCoords:function(t){var e=this.model.get("width"),i=this.model.get("height");for(var o in t)if("number"==typeof t[o])switch(o){case"x":case"x1":case"x2":case"width":case"minX":case"maxX":t[o]*=e;break;default:t[o]*=i}}}),i.view.Frame=t.media.view.MediaFrame.extend({template:t.template("robocrop-modal"),regions:["title","content","instructions","buttons","ratios"]}),i.view.Frame.Crop=i.view.Frame.extend({events:{"click .robocrop-save":"save","click .robocrop-cancel":"close"},save:function(){this.$(".robocrop-save, .robocrop-cancel").prop("disabled",!0),this._content.save()},initialize:function(t){i.view.Frame.prototype.initialize.apply(this,arguments),this.createTitle(),this.createContent(),this.createButtons(),this.on("close",this.dismiss,this),this.listenTo(this._content,"saved",this.modelSync)},modelSync:function(){this.$(".robocrop-save, .robocrop-cancel").prop("disabled",!1)},dismiss:function(){this._content.dismiss()},createTitle:function(){this._title=new t.media.View({tagName:"h1"}),this._title.$el.text(a.AttachmentDetails),this.title.set([this._title])},createContent:function(){var t=_.extend({controller:this.controller,model:this.model},this.options);this._content=new i.view.RobocropImage(t),this.content.set([this._content])},createButtons:function(){this.buttons.set([new t.media.view.Button({text:a.Close,className:"button-secondary robocrop-cancel"}),new t.media.view.Button({text:a.SaveChanges,className:"button-primary robocrop-save"})])}})}(wp,jQuery);
!function(t,i){var e,o,s=t.media.robocrop,n=s.image_ratios,c=(s.image_sizes,s.l10n),a=t.media.View;t.media.view.MediaFrame;s.view.focuspoint={},o=s.view.focuspoint.CropRect=a.extend({template:t.template("croprect"),className:"tool-croprect",controller:null,events:{"mouseenter .label":"showHilite","mouseleave .label":"hideHilite"},initialize:function(){return a.prototype.initialize.apply(this,arguments),_.defaults(this.options,{focuspoint:null,ratio:null}),this.options.label=this.options.ratio.name+" : 1",this.controller=this.options.controller,this.listenTo(this.controller.image,"load",this.imageLoaded),this},imageLoaded:function(t){this.$el.attr("data-dir",this.options.ratio.ratio>t.ratio?"w":"h"),this.$el.css("width",100*Math.min(1,this.options.ratio.ratio/t.ratio)+"%"),this.setFocuspoint()},setFocuspoint:function(t){t&&(this.options.focuspoint=t);var i={width:this.controller.image.$el.width(),height:this.controller.image.$el.height(),focuspoint:this.options.focuspoint},e=s.cropFromFocusPoint(i,this.options.ratio),o=s.relToAbsCoords(e,i);return this.$el.css("left",o.x+"px"),this.$el.css("top",o.y+"px"),this},showHilite:function(t){return this.$el.attr("data-hilite","true"),this.trigger("hilite:show"),this},hideHilite:function(t){return this.$el.attr("data-hilite","false"),this.trigger("hilite:hide"),this}}),e=s.view.focuspoint.FocusPoint=a.extend({className:"tool-focuspoint",template:t.template("focuspoint"),labelView:null,initialize:function(){var t=this;return _.defaults(this.options,{focuspoint:{x:0,y:0},enabled:!1,cropRects:[]}),this.options.cropRects.sort(function(t,i){return i.options.ratio.ratio-t.options.ratio.ratio}),this.$el.on("click",function(i){t.clickFocuspoint(i)}),this},render:function(){var t=this;return a.prototype.render.apply(this,arguments),_.each(this.options.cropRects,function(i){i.render(),t.$el.append(i.$el)}),this},setEnabled:function(t){var i=this.options.enabled;return this.options.enabled=t,this.$el.attr("data-enabled",t.toString()),i},clickFocuspoint:function(t){var i;this.options.enabled&&(i=this.$el.offset(),this.setFocuspoint({x:2*(t.pageX-i.left)/this.$el.width()-1,y:-2*(t.pageY-i.top)/this.$el.height()+1}))},getFocuspoint:function(){return this.focuspoint},setFocuspoint:function(t){var i=this;return this.focuspoint=t,this.$el.find(".focuspoint").css({left:50*(t.x+1)+"%",bottom:50*(t.y+1)+"%"}),_.each(this.options.cropRects,function(t){t.setFocuspoint(i.focuspoint)}),this.options.enabled&&this.trigger("change:focuspoint",this.focuspoint),this}}),s.view.focuspoint.ImageFocusPointSelect=a.extend({className:"robocrop-image-box",cropRects:[],initialize:function(){_.defaults(this.options,{controller:this,focuspoint:{x:0,y:0},src:!1,image:!1,enabled:!1});var t=this;return!1!==this.options.image&&this.options.image.constructor.prototype==s.view.Img.prototype?this.image=this.options.image:!1!==this.options.src?this.image=new s.view.Img({src:this.options.src}):this.image=new s.view.Img({src:""},this.options.image),this.cropRects=[],_.each(n,function(i,e){var s=new o({controller:t,focuspoint:t.options.focuspoint,ratio:i});t.listenTo(s,"hilite:show",t.showHilite),t.listenTo(s,"hilite:hide",t.hideHilite),t.cropRects.push(s)}),this.focuspoint=new e({controller:this.controller,focuspoint:this.options.focuspoint,enabled:this.options.enabled,cropRects:this.cropRects}),this.listenTo(this.focuspoint,"change:focuspoint",this.valueChanged),this.listenTo(this.image,"load",this.setHeight),this.views.set([this.image,this.focuspoint]),this},setHeight:function(){var t=Math.min(this.$el.parent().height(),this.image.$el.height());this.$el.height(t)},setEnabled:function(t){return this.focuspoint.setEnabled(t)},getFocuspoint:function(){return this.focuspoint.getFocuspoint()},setFocuspoint:function(t){return this.focuspoint&&this.focuspoint.setFocuspoint(t),this},getImageWidth:function(){return this.image.$el.get(0).naturalWidth},getImageHeight:function(){return this.image.$el.get(0).naturalHeight},setSrc:function(t){return this.image.$el.attr("src",t),this},valueChanged:function(){this.trigger("changed")},showHilite:function(t){this.$el.attr("data-hilite","true")},hideHilite:function(t){this.$el.attr("data-hilite","false")}}),s.view.Frame.Focuspoint=s.view.Frame.extend({className:"ask-focuspoint media-frame",events:{"click .reset":"reset","click .proceed":"proceed","click .cancel-upload":"cancelUpload"},initialize:function(){return _.defaults(this.options,{uploader:!1,title:c.SetFocusPoint,modal:!!this.options&&this.options.modal,src:""}),s.view.Frame.prototype.initialize.apply(this,arguments),this.modal&&this.modal.on("escape",this.cancelUpload,this),this.createTitle(),this.createContent(),this.createInstructions(),this.createButtons(),this},createTitle:function(){this._title=new t.media.View({tagName:"h1"}),this._title.$el.text(this.options.title),this.title.set([this._title])},createContent:function(){this._content=new s.view.focuspoint.ImageFocusPointSelect({src:"",focuspoint:{x:0,y:0},controller:this,enabled:!0,toolbar:this.tools}),this.content.set([this._content])},createInstructions:function(){this.instructions.set([new t.media.View({el:i('<div class="instructions">'+c.FocusPointInstructions+"</div>")[0],priority:-40})])},createButtons:function(){this.buttons.set([new t.media.view.Button({text:c.CancelUpload,className:"cancel-upload"}),new t.media.view.Button({text:c.Reset,className:"reset"}),new t.media.view.Button({text:c.Okay,className:"button-primary proceed"})])},setSrc:function(t){this._content.setSrc(t)},setFile:function(t){var i=this,e=new FileReader;e.onload=function(t){i.setSrc(e.result)},e.readAsDataURL(t)},setFocuspoint:function(t){this._content.setFocuspoint(t),this._content.setEnabled(!0)},getFocuspoint:function(){return this._content.getFocuspoint()},getImageWidth:function(){return this._content.getImageWidth()},getImageHeight:function(){return this._content.getImageHeight()},reset:function(t){this.setFocuspoint({x:0,y:0})},proceed:function(t){this.trigger("proceed")},cancelUpload:function(t){this.trigger("cancel-upload"),this.close()}})}(wp,jQuery);
!function(e,t){var o=e.media.robocrop,n=(o.image_ratios,o.image_sizes,o.l10n),i=(o.options,'<button type="button" class="button robocrop-open">'+n.EditImageSizes+"</button>"),a='<button type="button" class="button-link robocrop-open">'+n.EditImageSizes+"</button>",r={createStates:function(){this._parentCreateStates.apply(this,arguments),this.states.add(new o.controller.RobocropImage({model:this.model,selection:this.options.selection}))}};_.extend(e.media.view.ImageDetails.prototype,{_parentPostRender:e.media.view.ImageDetails.prototype.postRender,postRender:function(){this._parentPostRender.apply(this,arguments),this.$el.find(".actions").append(i)},robocropOpen:function(e){console.log();var t=this.model.get("size");new o.view.Frame.Crop({controller:this.controller,model:this.controller.image.attachment,sizeToSelect:t}).open()}}),e.media.view.ImageDetails.prototype.events["click .robocrop-open"]="robocropOpen",_.extend(e.media.view.Attachment.Details.prototype,{_parentRender:e.media.view.Attachment.Details.prototype.render,render:function(){this._parentRender.apply(this,arguments),["image/jpeg","image/png","image/gif"].indexOf(this.model.get("mime"))>=0&&(this.$(".attachment-actions").append(i),t(a).insertAfter(this.$el.find("a.edit-attachment")))},robocropOpen:function(e){new o.view.Frame.Crop({controller:this.controller,model:this.model}).open()},_parentCreateStates:e.media.view.Attachment.Details.prototype.createStates},r),e.media.view.Attachment.Details.prototype.events["click .robocrop-open"]="robocropOpen"}(wp,jQuery);
!function(e){var t=wp.media.robocrop,o=t.image_ratios,i=t.options,n={};i.ask_for_focuspoint&&_.extend(wp.media.view.UploaderWindow.prototype,{_parentReady:wp.media.view.UploaderWindow.prototype.ready,didReady:!1,ready:function(){function i(o){var a;p&&p.close().dispose(),s.length?(a=s.shift(),p=new t.view.Frame.Focuspoint({controller:e(this)}),p.on("proceed",function(){n[a.file.name]={focuspoint:p.getFocuspoint(),width:p.getImageWidth(),height:p.getImageHeight()},i(o)}).on("cancel-upload",function(){a.file.attachment.destroy()}),p.setFocuspoint({x:0,y:0}),p.setFile(a.blob),p.open()):o.start()}function a(e,t){s.push(e)}function r(e){var t={file:e,blob:e.getNative()};return t.blob||(t.blob=e.getSource()),t}var p,s=[];return this.didReady?this._parentReady.apply(this,arguments):(this.didReady=!0,ret=this._parentReady.apply(this,arguments),this.uploader.uploader.bind("FilesAdded",function(e,t){for(var o,n=0;n<t.length;n++)"image/png"!=t[n].type&&"image/jpeg"!=t[n].type||(o=r(t[n]),o.blob instanceof Blob&&a(o,e));s.length&&(e.stop(),e.refresh(),i(e),console.log("askfocus"))}),this.uploader.uploader.bind("BeforeUpload",function(e,i){var a,r;if(n[i.name]){imageinfo=n[i.name],r={};for(a in o)r[o[a].name]=t.cropFromFocusPoint(imageinfo,o[a]);e.settings.multipart_params.focuspoint=JSON.stringify(imageinfo.focuspoint),e.settings.multipart_params.cropdata=JSON.stringify(r),delete n[i.name]}}),ret)}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

//# sourceMappingURL=data:application/json;charset=utf8;base64,
